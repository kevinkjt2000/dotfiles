# If not running interactively, don't do anything
[[ $- != *i* ]] && return

main() {
	setup_all_the_bash_stuff

	add_to_path "$HOME/.local/bin"
	add_to_path "/usr/local/sbin"
	test -d /home/linuxbrew/.linuxbrew && eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)" && add_to_path /home/linuxbrew/.linuxbrew/bin
	command_exists terraform && complete -C $(which terraform) terraform

	command_exists direnv && eval "$(direnv hook bash)"

	if [ -d "$HOME/.asdf" ]; then
		source "$HOME/.asdf/asdf.sh"
		source "$HOME/.asdf/completions/asdf.bash"
	fi
}

create_aliases() {
	alias duchs="du -chs .[!.]* * | sort -rn"
	alias grep="grep --color=auto --exclude=*~"
	if command_exists reattach-to-user-namespace; then
		alias ls="ls -G"
	else
		alias ls="ls --color=auto"
	fi
	command_exists thefuck && eval $(thefuck --alias shimatta)
}

setup_bash_it() {
	export BASH_IT="$HOME/.bash_it"
	export BASH_IT_THEME="modern"
	export BASH_IT_AUTOMATIC_RELOAD_AFTER_CONFIG_CHANGE=1
	export SCM_CHECK=true  # Show SCM status in prompt
	source "$BASH_IT/bash_it.sh"
}

setup_environment_variables() {
	export EDITOR=nvim
	unset MAILCHECK  # Never check mail
	export NO_AT_BRIDGE=1  # http://unix.stackexchange.com/questions/230238
	export HISTSIZE=100000  # More command history! YAY!
	export HISTFILESIZE=10000000  # and the space to store those commands
	export HISTCONTROL=ignoreboth  # Ignore duplicate commands and commands that start with ' '
	export HISTCONTROL+=":erasedups"  # Erase duplicates form history
	export HISTIGNORE="ls:bg:fg:history"
	safe_append_prompt_command "history -a"  # Store history immediately
	export GPG_TTY=$(tty)  # Enables interactive password entry for gpg
	export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
	export CHROME_BIN=chromium  # Enables angular to find chrome exe
	export GCC_COLORS="error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01"
	export DOT_GITHUB_HOME="$XDG_CONFIG_HOME"
	export PYTHON_CONFIGURE_OPTS="--enable-shared"  # Fix asdf python
	export BASH_SILENCE_DEPRECATION_WARNING=1  # Silence Mac OS zsh default shell message
	command_exists keybase && export KEYBASE_DIR=$(keybase config get mountdir | sed -e 's/^"//' -e 's/"$//')
}

setup_all_the_bash_stuff() {
	setup_bash_it
	set +h  # Disable hashing path of executables
	set -o vi  # Turn on vi-style editing for the command line
	command_exists dircolors && eval "$(dircolors)"  # Export LS_COLORS fanciness
	setup_environment_variables
	create_aliases
}

main
